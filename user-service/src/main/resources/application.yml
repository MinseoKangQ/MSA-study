server:
  # Use random port, so port conflict would not be happened
  # Use with eureka.instance.instance-id attribute otherwise, you can see only 1 available zone
  port: 0

spring:
  application:
    name: user-service
  config:
    import:
      - classpath:/bootstrap.yml
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost/~/user_service_db # H2 must have a database named "user_service_db"
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect

eureka:
  instance:
    # ex) 192.168.0.13:67e8809c6d498525fead6b2eb18141e3
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka # Register this service(user-service) to Eureka server(discovery-service)

greeting:
  message: Welcome to the simple E-commerce.

# If config-service changes, this application need not to restart
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans
